<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAYEBQYFBAYGBQYHBwYIChAKCgkJChQODwwQFxQYGBcUFhYa
        HSUfGhsjHBYWICwgIyYnKSopGR8tMC0oMCUoKSj/2wBDAQcHBwoIChMKChMoGhYaKCgoKCgoKCgoKCgo
        KCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCj/wAARCAAyAGQDASIAAhEBAxEB/8QA
        HAABAAIDAQEBAAAAAAAAAAAAAAYHAgQFAwgB/8QALxAAAQMDAgUDAwMFAAAAAAAAAQIDBAAFERIhBhMx
        QVEHImEUMnFiocEVI4Gx8f/EABgBAQADAQAAAAAAAAAAAAAAAAABAgME/8QAHBEBAAICAwEAAAAAAAAA
        AAAAAAECAxESITEi/9oADAMBAAIRAxEAPwD6ppSlApSlB+Vr3CbHt0N6VNeSzHZQXHFqOyUjqazee5ag
        CCc+Op/Hz8VRvrXxk5cJbVhsrYktrKmjpIPNd22090p89NQ/TWmLHOS2oVtbjG0y4O9RmLxdYzE1SGWr
        qhx+2gjBCUOKb0KOd1HRqH5I7DNig5GR0r57484fcsXCPCkyEuM+7ZmVNTEsO6lp1kKK0HthWo56jI7Z
        xZ/ptxi3xDw+z9QUJuTLaeahKtlJxs4D4658KBHjOmXHGudPFa271KQC4Sv639JyE/T4+7Pu/wB9O+cY
        7ZztXWrBtWtAVjGfjFZ1hM7aFKUqApSlApSlArFZ0pzWVal0nN26EuU+lam0FIOgZO5Az+9BBfVbjeNY
        bMYyFLEuQNnEe7lJ392U50qJGEk4337Gqs9MvT9riJxdxvckIiM5/tuLC1px7tIycYAO5UCM7Yzkjvce
        8Jqn3aROuMtyWgyCtZZdToSQPa2o6B0SCAnOevc7yOG+/bGLU3ZURzE5KZEpL8kISpZOVZGMasDH8DY1
        1RljHj1Se59Z8eVu3HhcJcNXa4v2d5lUJxbalMLUzoKikgZ94wfPtxsOu+0KMaR6ccYqeQ8HWGccpKHS
        ttaCc6SBk4VpI/SrHXGTYjl5nSuIdJZt0RpC3TGeX7UcokDJwdLhG2ySrfPauLxZGYv8GCZ8wzZTrRQ8
        8kpZWlatJKFDppBSkp2A69SSaY8s1njedxJasTG4XJYr5FvdvYmQtXLdGdK8BST0IKRkggggg+K61Vh6
        cxXOGA59TJdWxMLSBHUpJcDqsJSsp0pxkdVd8Zqz657RET8+Lx52UpSqpKUpQKUpQK8J8ZEyE/GcyEuo
        KcjqM9x8170xQVVdIc2WwUR4bTJirzLWtwnmP56BJJ+7IIA66utLBMhWSW/Fu8Fl5hDmeaEJcUwrwfI8
        H/gm3EtkXPSl2PpUpKgpxhRwl4AjuNwoAbH4AO1QO92sstyJS9bFxceAbYxywy0BvvnScZSNj/OJiUJC
        eI7O+845cFIkttt8hlrl8wu5Vkq09s6Udcbg/FRWWyq8zJb8diNEQ2kANEgBpJONSgO/+Nh4wK9rnZ4k
        aI63HlESYyRhxToCH9RGQk/GTn8b10oFjdckyY1sjK+nfbSh/wCqaPLZcH3FJO6iDqAxtv1xTY6PC8R6
        VdGkzWQ1IgAKe0uKWHDghvuQMe44Hwandadqt7VthIjskqwPctXVZ8mtyoSUpSgUpSgUpSgUpSgV5vsM
        yEaX2m3U+FpCh+9KUGu1arcypKmoERtSftKWUgj8bVuAAAAAADtSlApSlApSlApSlB//2Q==
</value>
  </data>
</root>